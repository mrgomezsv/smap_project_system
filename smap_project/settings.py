"""
Django settings for smap_project project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from firebase_admin import credentials
import firebase_admin
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ==========================================
# Configuración básica del proyecto
# ==========================================

# SECRET_KEY: Usa una variable de entorno en producción para mayor seguridad
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-(y@^qkirxh^6wd9#913ts$a!3j@!gfrnsv-lj@_%$+%$iml*k2')

# DEBUG: Siempre debe estar en False en producción
DEBUG = False

# ALLOWED_HOSTS: Lista de dominios desde los cuales puede accederse al proyecto
ALLOWED_HOSTS = [
    'kidsfunyfiestasinfantiles.com',
    'www.kidsfunyfiestasinfantiles.com',
    'localhost',
    '127.0.0.1',
]

# ==========================================
# Configuración de Firebase
# ==========================================

# Inicializamos Firebase Admin SDK
cred_path = os.path.join(BASE_DIR, 'credentials', 'smap-kf-firebase-adminsdk-xqq0l-dc3c83c990.json')  # Cambia esta ruta si es necesario
if os.path.exists(cred_path):  # Validamos que el archivo de credenciales exista
    cred = credentials.Certificate(cred_path)
    firebase_admin.initialize_app(cred)

# ==========================================
# Aplicaciones instaladas
# ==========================================

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # Para habilitar CORS
    'rest_framework',  # Framework para crear APIs REST
    't_app_product',
    'api',
    'api_commentary',
    'api_like',
    'api_waiver',
    'api_waiver_validator',
    'kidsfun_web',
]

# ==========================================
# Middlewares
# ==========================================

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Seguridad
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Para habilitar CORS
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ==========================================
# Configuración de CORS
# ==========================================

CORS_ALLOWED_ORIGINS = [
    "https://kidsfunyfiestasinfantiles.com",
    "http://kidsfunyfiestasinfantiles.com",
]

# ==========================================
# Configuración de archivos estáticos y multimedia
# ==========================================

# Configuración de archivos estáticos
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Configuración de archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# ==========================================
# Configuración de Django REST Framework
# ==========================================

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',  # Para respuestas JSON
    ],
    'DEFAULT_CHARSET': 'utf-8',  # Asegura codificación UTF-8
}

# ==========================================
# Configuración de los Template
# ==========================================

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'kidsfun_web' / 'templates',  # Asegúrate de que esta línea esté presente
            BASE_DIR / 'kidsfun_web' / 'templates' / 'kidsfun_web' / 'home',
            BASE_DIR / 'kidsfun_web' / 'templates',
            BASE_DIR / 't_app_product' / 'templates' / 'push_notificated',
            BASE_DIR / 't_app_product' / 'templates' / 'other_service',
            BASE_DIR / 't_app_product' / 'templates' / 'firebase_auth',
            BASE_DIR / 't_app_product' / 'templates' / 'event',
            BASE_DIR / 't_app_product' / 'templates' / 'waiver',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ==========================================
# Configuración de base de datos
# ==========================================

# Base de datos en producción: Usa PostgreSQL o el servicio que uses
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # Motor de base de datos PostgreSQL
        'NAME': os.getenv('DB_NAME'),  # Nombre de la base de datos
        'USER': os.getenv('DB_USER'),  # Usuario de la base de datos
        'PASSWORD': os.getenv('DB_PASSWORD'),  # Contraseña del usuario
        'HOST': os.getenv('DB_HOST'),  # Dirección del servidor de la base de datos
        'PORT': os.getenv('DB_PORT'),  # Puerto del servidor
    }
}

# ==========================================
# Otras configuraciones opcionales
# ==========================================

# Configuración de idioma y zona horaria
LANGUAGE_CODE = 'es-es'  # Español (España)
TIME_ZONE = 'UTC'

USE_I18N = True
USE_TZ = True

# Configuración de la URL raíz para el administrador de archivos estáticos
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
