"""
Django settings for smap_project project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from firebase_admin import credentials
import firebase_admin
from dotenv import load_dotenv

# Cargar variables de entorno
load_dotenv()

# import api_waiver_validator  # Comentado - API eliminada

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-(y@^qkirxh^6wd9#913ts$a!3j@!gfrnsv-lj@_%$+%$iml*k2')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = [
    'kidsfunyfiestasinfantiles.com',
    'www.kidsfunyfiestasinfantiles.com',
    'localhost',
    '127.0.0.1',
]

# Firebase Admin SDK initialization
cred_path = os.path.join(BASE_DIR, 'credentials', 'smap-kf-firebase-adminsdk-xqq0l-dc3c83c990.json')
if os.path.exists(cred_path):
    cred = credentials.Certificate(cred_path)
else:
    # Fallback para desarrollo sin credenciales de Firebase
    cred = None

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    't_app_product',
    'waiver_v2',  # Nueva aplicación para waivers v2
    'kidsfun_web',
    'rest_framework',
    'cv_service',  # Nuevo microservicio para análisis de CV
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "https://kidsfunyfiestasinfantiles.com",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

ROOT_URLCONF = 'smap_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'kidsfun_web' / 'templates',
            BASE_DIR / 'kidsfun_web' / 'templates' / 'kidsfun_web' / 'home',
            BASE_DIR / 'kidsfun_web' / 'templates',
            BASE_DIR / 't_app_product' / 'templates' / 'push_notificated',
            BASE_DIR / 't_app_product' / 'templates' / 'other_service',
            BASE_DIR / 't_app_product' / 'templates' / 'firebase_auth',
            BASE_DIR / 't_app_product' / 'templates' / 'event',
            BASE_DIR / 't_app_product' / 'templates' / 'waiver',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smap_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Configuración de base de datos para producción
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'smap_kf'),
        'USER': os.getenv('DB_USER', 'mrgomez'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'Karin2100'),
        'HOST': os.getenv('DB_HOST', '82.165.210.146'),
        'PORT': os.getenv('DB_PORT', '5432'),
        'OPTIONS': {
            'client_encoding': 'UTF8',
        },
    }
}

# Configuración de codificación de caracteres
DEFAULT_CHARSET = 'utf-8'
FILE_CHARSET = 'utf-8'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Definir las rutas adicionales para buscar archivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

LOGIN_URL = '/signin'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración adicional para CSRF
CSRF_TRUSTED_ORIGINS = [
    'https://kidsfunyfiestasinfantiles.com',
    'https://www.kidsfunyfiestasinfantiles.com',
]

CSRF_COOKIE_SECURE = True

# Asegurarse de que las cookies de sesión solo se envíen a través de HTTPS
SESSION_COOKIE_SECURE = True

# Evitar que JavaScript acceda a las cookies de sesión
SESSION_COOKIE_HTTPONLY = True

# Establecer SameSite para proteger contra ataques CSRF
SESSION_COOKIE_SAMESITE = 'Lax'

# Opcionalmente, mantener ambas configuraciones para mayor seguridad
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 1800

# Configuración de correo electrónico
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'kidsfun.developer@gmail.com')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'Karin2100')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', 'kidsfun.developer@gmail.com')

# Configuración para pruebas (mostrar correos en consola)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Inicializar Firebase solo si las credenciales existen
if cred:
    try:
        firebase_admin.initialize_app(cred)
    except ValueError:
        pass  # La aplicación de Firebase ya está inicializada

SITE_DOMAIN = 'https://www.kidsfunyfiestasinfantiles.com'

# Configuración de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

# Configuración de logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'django.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Importar configuración local para desarrollo
try:
    from .local_settings import *
    print("🔧 Configuración local importada - Modo desarrollo")
except ImportError:
    print("🚀 Configuración de producción activa")
    pass
